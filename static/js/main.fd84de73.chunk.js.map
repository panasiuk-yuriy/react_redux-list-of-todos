{"version":3,"sources":["store/todos.ts","store/loading.ts","store/sort.ts","store/index.ts","api/api.tsx","api/helpers.ts","Buttons.tsx","TodoList.tsx","App.tsx","index.tsx"],"names":["reducer","todosList","action","type","initialState","isLoading","isVisible","state","field","order","loading","getSortField","sort","getSortOrder","getSortedTodos","visibleTodos","a","b","localeCompare","completed","rootReducer","combineReducers","todosReducer","loadingReducer","sortReducer","store","createStore","composeWithDevTools","URL","getTodos","fetch","then","response","json","todosData","usersData","map","todo","userInfo","find","user","userId","id","name","BUTTONS","text","Buttons","dispatch","useDispatch","sortTitle","useSelector","selectors","sortOrder","className","button","key","onClick","sortField","TodoList","title","deleteTodo","filter","App","data","loadingTodos","finally","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd84de73.chunk.js","sourcesContent":["import { AnyAction } from 'redux';\n\nconst HANDLE_SUCCES = 'HANDLE_SUCCES';\nconst DELETE_TODO = 'DELETE_TODO';\nconst SORT_TODOS = 'SORT_TODOS';\n\nexport const loadingTodos = (todosList: Todo[]) => ({ type: HANDLE_SUCCES, todosList });\nexport const deleteTodo = (todosList: Todo[]) => ({ type: DELETE_TODO, todosList });\nexport const sortTodos = (todosList: Todo[]) => ({ type: SORT_TODOS, todosList });\n\nconst reducer = (todosList: Todo[] = [], action: AnyAction) => {\n  switch (action.type) {\n    case HANDLE_SUCCES:\n      return action.todosList;\n    case DELETE_TODO:\n    case SORT_TODOS:\n      return action.todosList;\n    default:\n      return todosList;\n  }\n};\n\nexport default reducer;\n","import { AnyAction } from 'redux';\n\nconst START_LOADING = 'START_LOADING';\nconst FINISH_LOADING = 'FINISH_LOADING';\n\nexport const startLoading = () => ({ type: START_LOADING });\nexport const finishLoading = () => ({ type: FINISH_LOADING });\n\nconst initialState = {\n  isLoading: false,\n  isVisible: false,\n};\n\nconst reducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        isLoading: true,\n        isVisible: false,\n      };\n\n    case FINISH_LOADING:\n      return {\n        isVisible: true,\n        isLoading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { AnyAction } from 'redux';\n\nconst SORT_BY = 'SORT_BY';\nconst REVERSE = 'REVERSE';\nconst SORT_ASC = 'SORT_ASC';\n\ntype SortState = {\n  field: string;\n  order: 'ASC' | 'DESC' ;\n};\n\nconst initialState: SortState = {\n  field: '',\n  order: 'ASC',\n};\n\nexport const setSortField = (value: string) => ({ type: SORT_BY, field: value });\nexport const setSortOrder = () => ({ type: REVERSE });\nexport const setSortAsc = () => ({ type: SORT_ASC });\n\nconst reducer = (state: SortState = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case SORT_BY:\n      return {\n        ...state,\n        field: action.field,\n      };\n    case REVERSE:\n      return {\n        ...state,\n        order: state.order === 'ASC' ? 'DESC' : 'ASC',\n      };\n    case SORT_ASC:\n      return {\n        ...state,\n        order: 'ASC',\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport todosReducer from './todos';\nimport loadingReducer from './loading';\nimport sortReducer from './sort';\n\nexport const todosList = (state: RootState) => state.todosList;\nexport const isLoading = (state: RootState) => state.loading.isLoading;\nexport const isVisible = (state: RootState) => state.loading.isVisible;\n\nexport const getSortField = (state: RootState) => state.sort.field;\nexport const getSortOrder = (state: RootState) => state.sort.order;\n\nexport const getSortedTodos = (state: RootState) => {\n  const visibleTodos = [...state.todosList];\n  const { order, field } = state.sort;\n\n  switch (field) {\n    case 'user':\n    case 'title':\n      if (order === 'ASC') {\n        visibleTodos\n          .sort((a, b) => a[field].localeCompare(b[field]));\n      } else {\n        visibleTodos\n          .sort((a, b) => b[field].localeCompare(a[field]));\n      }\n\n      break;\n    case 'completed':\n      if (order === 'ASC') {\n        visibleTodos\n          .sort((a, b) => (+a.completed - +b.completed));\n      } else {\n        visibleTodos\n          .sort((a, b) => (+b.completed - +a.completed));\n      }\n\n      break;\n    default:\n  }\n\n  return visibleTodos;\n};\n\ntype RootState = {\n  todosList: Todo[];\n  loading: {\n    isLoading: boolean;\n    isVisible: boolean;\n  };\n  sort: {\n    field: string;\n    order: 'ASC' | 'DESC' ;\n  };\n};\n\nconst rootReducer = combineReducers(\n  {\n    todosList: todosReducer,\n    loading: loadingReducer,\n    sort: sortReducer,\n  },\n);\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n);\n\nexport default store;\n","const URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api/';\n\n\nconst responseTodos = () => {\n  return fetch(`${URL}todos.json`)\n    .then(response => response.json());\n};\n\nconst responseUsers = () => {\n  return fetch(`${URL}users.json`)\n    .then(response => response.json());\n};\n\nexport const getTodos = async () => {\n  const todosData = await responseTodos();\n  const usersData = await responseUsers();\n\n\n  return todosData.map((todo: Todo) => {\n    const userInfo = usersData.find((user: User) => todo.userId === user.id);\n\n    return {\n      ...todo,\n      user: userInfo.name,\n    };\n  });\n};\n","export const BUTTONS = [\n  {\n    name: 'title',\n    text: ' Sort by Title',\n  },\n  {\n    name: 'user',\n    text: ' Sort by Name',\n  },\n  {\n    name: 'completed',\n    text: ' Sort by Completed',\n  },\n];\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BUTTONS } from './api/helpers';\nimport { setSortField, setSortOrder, setSortAsc } from './store/sort';\nimport * as selectors from './store/index';\n\n\nconst Buttons = () => {\n  const dispatch = useDispatch();\n  const sortTitle = useSelector(selectors.getSortField);\n  const sortOrder = useSelector(selectors.getSortOrder);\n\n  const handleSort = (sortField: string) => {\n    if (sortTitle === sortField && sortOrder === 'ASC') {\n      dispatch(setSortOrder());\n    } else {\n      dispatch(setSortAsc());\n    }\n\n    dispatch(setSortField(sortField));\n  };\n\n  return (\n    <div className=\"buttons\">\n      {BUTTONS.map(button => (\n        <button\n          key={button.name}\n          className=\"button\"\n          type=\"button\"\n          onClick={() => handleSort(button.name)}\n        >\n          {button.text}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteTodo } from './store/todos';\nimport Buttons from './Buttons';\nimport { getSortedTodos } from './store/index';\n\nexport const TodoList = () => {\n  const dispatch = useDispatch();\n  const visibleTodos = useSelector(getSortedTodos);\n\n  const deleleTodo = (id: number) => {\n    dispatch(deleteTodo(visibleTodos.filter(todo => todo.id !== id)));\n  };\n\n  return (\n    <>\n      <Buttons />\n      <div className=\"todos_container\">\n        {visibleTodos.map(todo => (\n          <div\n            key={todo.id}\n            className=\"todo\"\n          >\n            <p className=\"todo_title\">\n              {todo.title}\n            </p>\n            <p className=\"todo_user\">{todo.user}</p>\n            {todo.completed\n              ? <p className=\"todo_completed\">completed</p>\n              : <p className=\"todo_inprocess\">in process</p>}\n            <button\n              type=\"button\"\n              className=\"todo__button todo__button--delete\"\n              onClick={() => deleleTodo(todo.id)}\n            >\n              Delete todo\n            </button>\n          </div>\n\n        ))}\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTodos } from './api/api';\nimport './App.scss';\nimport { startLoading, finishLoading } from './store/loading';\nimport { loadingTodos } from './store/todos';\nimport { TodoList } from './TodoList';\nimport * as selectors from './store/index';\n\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectors.isLoading);\n  const isVisible = useSelector(selectors.isVisible);\n\n  const loadTodos = () => {\n    dispatch(startLoading());\n    getTodos()\n      .then(data => dispatch(loadingTodos(data)))\n      .finally(() => {\n        dispatch(finishLoading());\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Redux list of todos</h1>\n      <div className=\"container\">\n        {!isVisible\n          && (\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={loadTodos}\n            >\n              Load Todos\n            </button>\n          )}\n        {isLoading\n          ? <div className=\"loader\" />\n          : (isVisible\n          && <TodoList />\n          )}\n\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './store';\nimport App from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}